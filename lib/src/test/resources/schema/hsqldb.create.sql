create table users (
    id bigint not null IDENTITY,
    name varchar(100) not null,
    info varchar(200),
    constraint users_pk primary key (id)
);
create table clinic (
    id bigint generated by default as identity primary key,
    name varchar(100) not null,
    city_id bigint not null
);
create table city (
    id bigint generated by default as identity primary key,
    name varchar(50) not null
);
create table bill (
    id bigint generated by default as identity primary key,
    amount decimal(15,2) not null,
    discount decimal(15,2),
    date timestamp with time zone not null
);
create table clinic_users (
    clinic_id bigint not null,
    user_id bigint not null
);
create table user_bills (
    user_id bigint not null,
    bill_id bigint not null
);
create global temporary table names2(
    name varchar(100)
);

---

alter table clinic       add constraint clinic_fk2       foreign key (city_id)   references city(id);
alter table clinic_users add constraint clinic_users_fk0 foreign key (clinic_id) references clinic(id);
alter table clinic_users add constraint clinic_users_fk1 foreign key (user_id)   references users(id);
alter table user_bills   add constraint user_bills_fk0   foreign key (user_id)   references users(id);
alter table user_bills   add constraint user_bills_fk1   foreign key (bill_id)   references bill(id);
---

create procedure digit_magic(in x int, inout y int, out z int)
    begin atomic
        set y = y + x;
        set z = y + x;
    end;
create procedure bill_zero()
modifies sql data
    begin atomic
        update bill set amount = 0;
    end;
create procedure discount_bill(in datedisc datetime)
modifies sql data
    begin atomic
        update bill set discount = amount * 0.1 where date = datedisc;
    end;

create table all_default_data_types(
    byte_type tinyint not null,
    byte_type_null tinyint,
  time_offset_type time with time zone not null,
  time_offset_type_null time with time zone
)

create table grouped_dto(
    gg varchar(50) not null,
    bool boolean not null,
    byte tinyint not null,
    short smallint not null,
    intt int not null,
    long bigint not null,
    flo float not null,
    doub double not null
)

create procedure test_types_procedure(
        inout bigdecimal_type decimal(15,3),
        out bigdecimal_type_null decimal(15,3),
        inout boolean_type boolean,
        out boolean_type_null boolean,
        --bytearray_type bytea not null,
        --bytearray_type_null bytea,
        inout date_type date,
        out date_type_null date,
        inout integer_type integer,
        out integer_type_null integer,
        inout long_type bigint,
        out long_type_null bigint,
        inout string_type varchar(200),
        out string_type_null varchar(200),
        inout short_type smallint,
        out short_type_null smallint,
        inout byte_type tinyint,
        out byte_type_null tinyint,
        inout time_type time,
        out time_type_null time,
        inout timestamp_type timestamp,
        out timestamp_type_null timestamp)
    begin atomic
        declare b boolean;
        set b = true;
    end;
