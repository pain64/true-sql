create table users (
    id bigint not null IDENTITY,
    name varchar(100) not null,
    info varchar(200),
    constraint users_pk primary key (id)
);
create table clinic (
    id bigint generated by default as identity primary key,
    name varchar(100) not null,
    city_id bigint not null
);
create table city (
    id bigint generated by default as identity primary key,
    name varchar(50) not null
);
create table bill (
    id bigint generated by default as identity primary key,
    amount decimal(15,2) not null,
    discount decimal(15,2),
    date timestamp with time zone not null
);
create table clinic_users (
    clinic_id bigint not null,
    user_id bigint not null
);
create table user_bills (
    user_id bigint not null,
    bill_id bigint not null
);
create global temporary table names2(
    name varchar(100)
);
create table grouped_dto(
    gg varchar(50) not null,
    bool boolean not null,
    byte tinyint not null,
    short smallint not null,
    intt int not null,
    long bigint not null,
    flo float not null,
    doub double not null
)
---

alter table clinic       add constraint clinic_fk2       foreign key (city_id)   references city(id);
alter table clinic_users add constraint clinic_users_fk0 foreign key (clinic_id) references clinic(id);
alter table clinic_users add constraint clinic_users_fk1 foreign key (user_id)   references users(id);
alter table user_bills   add constraint user_bills_fk0   foreign key (user_id)   references users(id);
alter table user_bills   add constraint user_bills_fk1   foreign key (bill_id)   references bill(id);
---
insert into grouped_dto values ('', true, 1, 2, 3, 4, 5.0, 6.0);
---

create procedure digit_magic(in x int, inout y int, out z int)
    begin atomic
        set y = y + x;
        set z = y + x;
    end;
create procedure bill_zero()
modifies sql data
    begin atomic
        update bill set amount = 0;
    end;
create procedure discount_bill(in datedisc datetime)
modifies sql data
    begin atomic
        update bill set discount = amount * 0.1 where date = datedisc;
    end;

create procedure p_boolean(in x boolean, out y boolean)
    begin atomic set y = x; end;
create procedure p_tinyint(in x tinyint, out y tinyint)
    begin atomic set y = x; end;
create procedure p_smallint(in x smallint, out y smallint)
    begin atomic set y = x; end;
create procedure p_int(in x int, out y int)
    begin atomic set y = x; end;
create procedure p_bigint(in x bigint, out y bigint)
    begin atomic set y = x; end;
create procedure p_float(in x float, out y float)
    begin atomic set y = x; end;
create procedure p_decimal(in x decimal(15, 3), out y decimal(15, 3))
    begin atomic set y = x; end;
create procedure p_varchar(in x varchar(100), out y varchar(100))
    begin atomic set y = x; end;
create procedure p_date(in x date, out y date)
    begin atomic set y = x; end;
create procedure p_time(in x time, out y time)
    begin atomic set y = x; end;
create procedure p_timestamp(in x timestamp, out y timestamp)
    begin atomic set y = x; end;
create procedure p_timestamptz(in x timestamp with time zone, out y timestamp with time zone)
    begin atomic set y = x; end;
create procedure p_varbinary(in x varbinary, out y varbinary)
    begin atomic set y = x; end;
create procedure p_uuid(in x uuid, out y uuid)
    begin atomic set y = x; end;